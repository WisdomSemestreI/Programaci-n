

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov 17 19:51:45 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4585 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  00BEE3                     __pidataCOMRAM:
    55                           	opt callstack 0
    56                           
    57                           ;initializer for _P
    58  00BEE3  50                 	db	80
    59  00BEE4  72                 	db	114
    60  00BEE5  65                 	db	101
    61  00BEE6  6E                 	db	110
    62  00BEE7  64                 	db	100
    63  00BEE8  69                 	db	105
    64  00BEE9  64                 	db	100
    65  00BEEA  6F                 	db	111
    66  00BEEB  00                 	db	0
    67                           
    68                           ;initializer for _A
    69  00BEEC  41                 	db	65
    70  00BEED  70                 	db	112
    71  00BEEE  61                 	db	97
    72  00BEEF  67                 	db	103
    73  00BEF0  61                 	db	97
    74  00BEF1  64                 	db	100
    75  00BEF2  6F                 	db	111
    76  00BEF3  00                 	db	0
    77                           
    78                           	psect	nvCOMRAM
    79  000016                     __pnvCOMRAM:
    80                           	opt callstack 0
    81  000016                     _z:
    82                           	opt callstack 0
    83  000016                     	ds	2
    84  0000                     _RCREG	set	4014
    85  0000                     _PIR1bits	set	3998
    86  0000                     _TXREG	set	4013
    87  0000                     _TXSTAbits	set	4012
    88  0000                     _SPBRG	set	4015
    89  0000                     _RCSTA	set	4011
    90  0000                     _TXSTA	set	4012
    91  0000                     _TRISCbits	set	3988
    92  0000                     _ADCON1	set	4033
    93  0000                     _CVRCONbits	set	4021
    94  0000                     _CMCON	set	4020
    95  0000                     _OSCCON	set	4051
    96  0000                     _RB0	set	31752
    97  0000                     _TRISB0	set	31896
    98                           
    99                           ; #config settings
   100  0000                     
   101                           	psect	cinit
   102  00BF36                     __pcinit:
   103                           	opt callstack 0
   104  00BF36                     start_initialization:
   105                           	opt callstack 0
   106  00BF36                     __initialization:
   107                           	opt callstack 0
   108                           
   109                           ; Initialize objects allocated to COMRAM (17 bytes)
   110                           ; load TBLPTR registers with __pidataCOMRAM
   111  00BF36  0EE3               	movlw	low __pidataCOMRAM
   112  00BF38  6EF6               	movwf	tblptrl,c
   113  00BF3A  0EBE               	movlw	high __pidataCOMRAM
   114  00BF3C  6EF7               	movwf	tblptrh,c
   115  00BF3E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   116  00BF40  6EF8               	movwf	tblptru,c
   117  00BF42  EE00  F001         	lfsr	0,__pdataCOMRAM
   118  00BF46  EE10 F011          	lfsr	1,17
   119  00BF4A                     copy_data0:
   120  00BF4A  0009               	tblrd		*+
   121  00BF4C  CFF5 FFEE          	movff	tablat,postinc0
   122  00BF50  50E5               	movf	postdec1,w,c
   123  00BF52  50E1               	movf	fsr1l,w,c
   124  00BF54  E1FA               	bnz	copy_data0
   125                           
   126                           ; Clear objects allocated to COMRAM (1 bytes)
   127  00BF56  6A18               	clrf	__pbssCOMRAM& (0+255),c
   128  00BF58                     end_of_initialization:
   129                           	opt callstack 0
   130  00BF58                     __end_of__initialization:
   131                           	opt callstack 0
   132  00BF58  0100               	movlb	0
   133  00BF5A  EFAF  F05F         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMRAM
   136  000018                     __pbssCOMRAM:
   137                           	opt callstack 0
   138  000018                     _RX_Data:
   139                           	opt callstack 0
   140  000018                     	ds	1
   141                           
   142                           	psect	dataCOMRAM
   143  000001                     __pdataCOMRAM:
   144                           	opt callstack 0
   145  000001                     _P:
   146                           	opt callstack 0
   147  000001                     	ds	9
   148  00000A                     _A:
   149                           	opt callstack 0
   150  00000A                     	ds	8
   151                           
   152                           	psect	cstackCOMRAM
   153  000012                     __pcstackCOMRAM:
   154                           	opt callstack 0
   155  000012                     SEND_UART@TX_Data:
   156                           	opt callstack 0
   157                           
   158                           ; 1 bytes @ 0x0
   159  000012                     	ds	1
   160  000013                     ??_main:
   161                           
   162                           ; 1 bytes @ 0x1
   163  000013                     	ds	1
   164  000014                     main@i:
   165                           	opt callstack 0
   166                           
   167                           ; 1 bytes @ 0x2
   168  000014                     	ds	1
   169  000015                     main@i_92:
   170                           	opt callstack 0
   171                           
   172                           ; 1 bytes @ 0x3
   173  000015                     	ds	1
   174                           
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   177 ;;
   178 ;; *************** function _main *****************
   179 ;; Defined at:
   180 ;;		line 17 in file "PRUEBAS.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;  i               1    3[COMRAM] unsigned char 
   185 ;;  i               1    2[COMRAM] unsigned char 
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   190 ;; Tracked objects:
   191 ;;		On entry : 0/0
   192 ;;		On exit  : 0/0
   193 ;;		Unchanged: 0/0
   194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   198 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   199 ;;Total ram usage:        3 bytes
   200 ;; Hardware stack levels required when called:    1
   201 ;; This function calls:
   202 ;;		_INIT_UART
   203 ;;		_RECEIVE_UART
   204 ;;		_SEND_UART
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text0
   211  00BF5E                     __ptext0:
   212                           	opt callstack 0
   213  00BF5E                     _main:
   214                           	opt callstack 30
   215  00BF5E                     
   216                           ;PRUEBAS.c: 21:         z = RECEIVE_UART();
   217  00BF5E  0E60               	movlw	96
   218  00BF60  6ED3               	movwf	211,c	;volatile
   219  00BF62                     
   220                           ;PRUEBAS.c: 24:             RB0 = 1;
   221  00BF62  68B4               	setf	180,c	;volatile
   222  00BF64                     
   223                           ;PRUEBAS.c: 25: 
   224  00BF64  9EB5               	bcf	181,7,c	;volatile
   225                           
   226                           ;PRUEBAS.c: 26:             for (unsigned char i = 0; i < (sizeof (P) - 1); i++) {
   227  00BF66  0E0F               	movlw	15
   228  00BF68  6EC1               	movwf	193,c	;volatile
   229  00BF6A                     
   230                           ;PRUEBAS.c: 28:             }
   231  00BF6A  9093               	bcf	3987,0,c	;volatile
   232  00BF6C                     
   233                           ;PRUEBAS.c: 30:         if (z == 48) {
   234  00BF6C  EC7A  F05F         	call	_INIT_UART	;wreg free
   235  00BF70                     l775:
   236                           
   237                           ;PRUEBAS.c: 34:                 SEND_UART(A[i]);
   238  00BF70  EC8E  F05F         	call	_RECEIVE_UART	;wreg free
   239  00BF74  6E13               	movwf	??_main^0,c
   240  00BF76  5013               	movf	??_main^0,w,c
   241  00BF78  6E16               	movwf	_z^0,c
   242  00BF7A  6A17               	clrf	(_z+1)^0,c
   243                           
   244                           ;PRUEBAS.c: 36:             }
   245  00BF7C  0E31               	movlw	49
   246  00BF7E  1816               	xorwf	_z^0,w,c
   247  00BF80  1017               	iorwf	(_z+1)^0,w,c
   248  00BF82  A4D8               	btfss	status,2,c
   249  00BF84  EFC6  F05F         	goto	u31
   250  00BF88  EFC8  F05F         	goto	u30
   251  00BF8C                     u31:
   252  00BF8C  EFDD  F05F         	goto	l791
   253  00BF90                     u30:
   254  00BF90                     
   255                           ;PRUEBAS.c: 37: 
   256  00BF90  8081               	bsf	3969,0,c	;volatile
   257  00BF92                     
   258                           ;PRUEBAS.c: 39: 
   259  00BF92  0E00               	movlw	0
   260  00BF94  6E14               	movwf	main@i^0,c
   261  00BF96                     l785:
   262                           
   263                           ;PRUEBAS.c: 40:     }
   264  00BF96  0E01               	movlw	low _P
   265  00BF98  2414               	addwf	main@i^0,w,c
   266  00BF9A  6ED9               	movwf	fsr2l,c
   267  00BF9C  6ADA               	clrf	fsr2h,c
   268  00BF9E  0E00               	movlw	high _P
   269  00BFA0  22DA               	addwfc	fsr2h,f,c
   270  00BFA2  50DF               	movf	indf2,w,c
   271  00BFA4  EC83  F05F         	call	_SEND_UART
   272  00BFA8                     
   273                           ;PRUEBAS.c: 41:     return;
   274  00BFA8  2A14               	incf	main@i^0,f,c
   275  00BFAA  0E07               	movlw	7
   276  00BFAC  6414               	cpfsgt	main@i^0,c
   277  00BFAE  EFDB  F05F         	goto	u41
   278  00BFB2  EFDD  F05F         	goto	u40
   279  00BFB6                     u41:
   280  00BFB6  EFCB  F05F         	goto	l785
   281  00BFBA                     u40:
   282  00BFBA                     l791:
   283  00BFBA  0E30               	movlw	48
   284  00BFBC  1816               	xorwf	_z^0,w,c
   285  00BFBE  1017               	iorwf	(_z+1)^0,w,c
   286  00BFC0  A4D8               	btfss	status,2,c
   287  00BFC2  EFE5  F05F         	goto	u51
   288  00BFC6  EFE7  F05F         	goto	u50
   289  00BFCA                     u51:
   290  00BFCA  EFB8  F05F         	goto	l775
   291  00BFCE                     u50:
   292  00BFCE  9081               	bcf	3969,0,c	;volatile
   293  00BFD0  0E00               	movlw	0
   294  00BFD2  6E15               	movwf	main@i_92^0,c
   295  00BFD4                     l801:
   296  00BFD4  0E0A               	movlw	low _A
   297  00BFD6  2415               	addwf	main@i_92^0,w,c
   298  00BFD8  6ED9               	movwf	fsr2l,c
   299  00BFDA  6ADA               	clrf	fsr2h,c
   300  00BFDC  0E00               	movlw	high _A
   301  00BFDE  22DA               	addwfc	fsr2h,f,c
   302  00BFE0  50DF               	movf	indf2,w,c
   303  00BFE2  EC83  F05F         	call	_SEND_UART
   304  00BFE6  2A15               	incf	main@i_92^0,f,c
   305  00BFE8  0E06               	movlw	6
   306  00BFEA  6415               	cpfsgt	main@i_92^0,c
   307  00BFEC  EFFA  F05F         	goto	u61
   308  00BFF0  EFFC  F05F         	goto	u60
   309  00BFF4                     u61:
   310  00BFF4  EFEA  F05F         	goto	l801
   311  00BFF8                     u60:
   312  00BFF8  EFB8  F05F         	goto	l775
   313  00BFFC  EF00  F000         	goto	start
   314  00C000                     __end_of_main:
   315                           	opt callstack 0
   316                           
   317 ;; *************** function _SEND_UART *****************
   318 ;; Defined at:
   319 ;;		line 16 in file "../UART.X/UART.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;  TX_Data         1    wreg     unsigned char 
   322 ;; Auto vars:     Size  Location     Type
   323 ;;  TX_Data         1    0[COMRAM] unsigned char 
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   337 ;;Total ram usage:        1 bytes
   338 ;; Hardware stack levels used:    1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		_main
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           	psect	text1
   347  00BF06                     __ptext1:
   348                           	opt callstack 0
   349  00BF06                     _SEND_UART:
   350                           	opt callstack 30
   351                           
   352                           ;incstack = 0
   353                           ;SEND_UART@TX_Data stored from wreg
   354  00BF06  6E12               	movwf	SEND_UART@TX_Data^0,c
   355  00BF08                     l64:
   356                           
   357                           ;../UART.X/UART.c: 17:     while (TXSTAbits.TRMT == 0) {
   358  00BF08  A2AC               	btfss	172,1,c	;volatile
   359  00BF0A  EF89  F05F         	goto	u21
   360  00BF0E  EF8B  F05F         	goto	u20
   361  00BF12                     u21:
   362  00BF12  EF84  F05F         	goto	l64
   363  00BF16                     u20:
   364  00BF16                     
   365                           ;../UART.X/UART.c: 19:     TXREG = TX_Data;
   366  00BF16  C012  FFAD         	movff	SEND_UART@TX_Data,4013	;volatile
   367  00BF1A  0012               	return		;funcret
   368  00BF1C                     __end_of_SEND_UART:
   369                           	opt callstack 0
   370                           
   371 ;; *************** function _RECEIVE_UART *****************
   372 ;; Defined at:
   373 ;;		line 23 in file "../UART.X/UART.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      unsigned char 
   380 ;; Registers used:
   381 ;;		wreg, status,2
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   391 ;;Total ram usage:        0 bytes
   392 ;; Hardware stack levels used:    1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text2
   401  00BF1C                     __ptext2:
   402                           	opt callstack 0
   403  00BF1C                     _RECEIVE_UART:
   404                           	opt callstack 30
   405  00BF1C                     l70:
   406                           
   407                           ;../UART.X/UART.c: 24:     while (PIR1bits.RCIF == 0) {
   408  00BF1C  AA9E               	btfss	158,5,c	;volatile
   409  00BF1E  EF93  F05F         	goto	u11
   410  00BF22  EF95  F05F         	goto	u10
   411  00BF26                     u11:
   412  00BF26  EF8E  F05F         	goto	l70
   413  00BF2A                     u10:
   414  00BF2A                     
   415                           ;../UART.X/UART.c: 27:     RX_Data = RCREG;
   416  00BF2A  CFAE F018          	movff	4014,_RX_Data	;volatile
   417  00BF2E                     
   418                           ;../UART.X/UART.c: 28:     RCREG = 0;
   419  00BF2E  0E00               	movlw	0
   420  00BF30  6EAE               	movwf	174,c	;volatile
   421                           
   422                           ;../UART.X/UART.c: 29:     return RX_Data;
   423  00BF32  5018               	movf	_RX_Data^0,w,c
   424  00BF34  0012               	return		;funcret
   425  00BF36                     __end_of_RECEIVE_UART:
   426                           	opt callstack 0
   427                           
   428 ;; *************** function _INIT_UART *****************
   429 ;; Defined at:
   430 ;;		line 4 in file "../UART.X/UART.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text3
   458  00BEF4                     __ptext3:
   459                           	opt callstack 0
   460  00BEF4                     _INIT_UART:
   461                           	opt callstack 30
   462  00BEF4                     
   463                           ;../UART.X/UART.c: 8:     TRISCbits.TRISC7 = 1;
   464  00BEF4  8E94               	bsf	148,7,c	;volatile
   465                           
   466                           ;../UART.X/UART.c: 9:     TRISCbits.TRISC6 = 0;
   467  00BEF6  9C94               	bcf	148,6,c	;volatile
   468  00BEF8                     
   469                           ;../UART.X/UART.c: 10:     TXSTA = 0b00100110;
   470  00BEF8  0E26               	movlw	38
   471  00BEFA  6EAC               	movwf	172,c	;volatile
   472                           
   473                           ;../UART.X/UART.c: 11:     RCSTA = 0b10010000;
   474  00BEFC  0E90               	movlw	144
   475  00BEFE  6EAB               	movwf	171,c	;volatile
   476                           
   477                           ;../UART.X/UART.c: 13:     SPBRG = 25;
   478  00BF00  0E19               	movlw	25
   479  00BF02  6EAF               	movwf	175,c	;volatile
   480  00BF04  0012               	return		;funcret
   481  00BF06                     __end_of_INIT_UART:
   482                           	opt callstack 0
   483  0000                     
   484                           	psect	rparam
   485  0000                     tosu	equ	0xFFF
   486                           tosh	equ	0xFFE
   487                           tosl	equ	0xFFD
   488                           stkptr	equ	0xFFC
   489                           pclatu	equ	0xFFB
   490                           pclath	equ	0xFFA
   491                           pcl	equ	0xFF9
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           prodh	equ	0xFF4
   497                           prodl	equ	0xFF3
   498                           indf0	equ	0xFEF
   499                           postinc0	equ	0xFEE
   500                           postdec0	equ	0xFED
   501                           preinc0	equ	0xFEC
   502                           plusw0	equ	0xFEB
   503                           fsr0h	equ	0xFEA
   504                           fsr0l	equ	0xFE9
   505                           wreg	equ	0xFE8
   506                           indf1	equ	0xFE7
   507                           postinc1	equ	0xFE6
   508                           postdec1	equ	0xFE5
   509                           preinc1	equ	0xFE4
   510                           plusw1	equ	0xFE3
   511                           fsr1h	equ	0xFE2
   512                           fsr1l	equ	0xFE1
   513                           bsr	equ	0xFE0
   514                           indf2	equ	0xFDF
   515                           postinc2	equ	0xFDE
   516                           postdec2	equ	0xFDD
   517                           preinc2	equ	0xFDC
   518                           plusw2	equ	0xFDB
   519                           fsr2h	equ	0xFDA
   520                           fsr2l	equ	0xFD9
   521                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         1
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SEND_UART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     105
                                              1 COMRAM     3     3      0
                          _INIT_UART
                       _RECEIVE_UART
                          _SEND_UART
 ---------------------------------------------------------------------------------
 (1) _SEND_UART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RECEIVE_UART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INIT_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_UART
   _RECEIVE_UART
   _SEND_UART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4      18       1       25.3%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      20        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov 17 19:51:45 2019

                      _A 000A                        _P 0001                        _z 0016  
                     l61 BF04                       l70 BF1C                       l72 BF2A  
                     l64 BF08                       l73 BF34                       l67 BF1A  
                     u10 BF2A                       u11 BF26                       u20 BF16  
                     u21 BF12                       u30 BF90                       u31 BF8C  
                     u40 BFBA                       u41 BFB6                       u50 BFCE  
                     u51 BFCA                       u60 BFF8                       u61 BFF4  
                    l801 BFD4                      l803 BFE6                      l805 BFE8  
                    l751 BEF8                      l753 BF1C                      l761 BF16  
                    l755 BF2E                      l771 BF6A                      l749 BEF4  
                    l773 BF6C                      l765 BF5E                      l759 BF08  
                    l791 BFBA                      l775 BF70                      l767 BF62  
                    l793 BFCE                      l785 BF96                      l777 BF90  
                    l769 BF64                      l795 BFD0                      l787 BFA8  
                    l779 BF92                      l789 BFAA                      _RB0 007C08  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _main BF5E  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000       __size_of_INIT_UART 0012            __CFG_MCLRE$ON 000000  
           ___param_bank 000000       __size_of_SEND_UART 0016                    ?_main 0012  
                  _CMCON 000FB4                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _TXREG 000FAD                    _TXSTA 000FAC  
          ?_RECEIVE_UART 0012                    main@i 0014                    tablat 000FF5  
                  status 000FD8          __initialization BF36             __end_of_main C000  
                 ??_main 0013            __activetblptr 000000           ??_RECEIVE_UART 0012  
      __end_of_INIT_UART BF06                   _ADCON1 000FC1                   _OSCCON 000FD3  
                 _TRISB0 007C98        __end_of_SEND_UART BF1C             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization BF58          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0012               __pnvCOMRAM 0016  
   __end_of_RECEIVE_UART BF36                  _RX_Data 0018                  __Hparam 0000  
                __Lparam 0000         SEND_UART@TX_Data 0012                  __pcinit BF36  
                __ramtop 0D00                  __ptext0 BF5E                  __ptext1 BF06  
                __ptext2 BF1C                  __ptext3 BEF4     end_of_initialization BF58  
              _INIT_UART BEF4                _SEND_UART BF06                  postdec1 000FE5  
                postinc0 000FEE                _TRISCbits 000F94               ?_INIT_UART 0012  
  __size_of_RECEIVE_UART 001A                _TXSTAbits 000FAC               ?_SEND_UART 0012  
          __pidataCOMRAM BEE3      start_initialization BF36             _RECEIVE_UART BF1C  
       __CFG_OSC$IRCIO67 000000              __pbssCOMRAM 0018              ??_INIT_UART 0012  
            ??_SEND_UART 0012                 _PIR1bits 000F9E                copy_data0 BF4A  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 00A2  
             _CVRCONbits 000FB5                 main@i_92 0015  
