

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 22 22:06:23 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4585 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	nvCOMRAM
    52  000001                     __pnvCOMRAM:
    53                           	opt callstack 0
    54  000001                     _Recibir:
    55                           	opt callstack 0
    56  000001                     	ds	1
    57  0000                     _ADCON1	set	4033
    58  0000                     _CVRCONbits	set	4021
    59  0000                     _CMCON	set	4020
    60  0000                     _OSCCON	set	4051
    61  0000                     _RCREG	set	4014
    62  0000                     _PIR1bits	set	3998
    63  0000                     _TXREG	set	4013
    64  0000                     _TXSTAbits	set	4012
    65  0000                     _SPBRG	set	4015
    66  0000                     _RCSTA	set	4011
    67  0000                     _TXSTA	set	4012
    68  0000                     _TRISCbits	set	3988
    69                           
    70                           ; #config settings
    71  0000                     
    72                           	psect	cinit
    73  00BF96                     __pcinit:
    74                           	opt callstack 0
    75  00BF96                     start_initialization:
    76                           	opt callstack 0
    77  00BF96                     __initialization:
    78                           	opt callstack 0
    79                           
    80                           ; Clear objects allocated to COMRAM (1 bytes)
    81  00BF96  6A02               	clrf	__pbssCOMRAM& (0+255),c
    82  00BF98                     end_of_initialization:
    83                           	opt callstack 0
    84  00BF98                     __end_of__initialization:
    85                           	opt callstack 0
    86  00BF98  0100               	movlb	0
    87  00BF9A  EFF0  F05F         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	bssCOMRAM
    90  000002                     __pbssCOMRAM:
    91                           	opt callstack 0
    92  000002                     _RX_Data:
    93                           	opt callstack 0
    94  000002                     	ds	1
    95                           
    96                           	psect	cstackCOMRAM
    97  000003                     __pcstackCOMRAM:
    98                           	opt callstack 0
    99  000003                     SEND_UART@TX_Data:
   100                           	opt callstack 0
   101                           
   102                           ; 1 bytes @ 0x0
   103  000003                     	ds	1
   104  000004                     
   105                           ; 1 bytes @ 0x1
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 14 in file "Uart_Uso.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;		None
   116 ;; Return value:  Size  Location     Type
   117 ;;                  1    wreg      void 
   118 ;; Registers used:
   119 ;;		wreg, status,2, cstack
   120 ;; Tracked objects:
   121 ;;		On entry : 0/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   129 ;;Total ram usage:        0 bytes
   130 ;; Hardware stack levels required when called:    1
   131 ;; This function calls:
   132 ;;		_INIT_UART
   133 ;;		_RECEIVE_UART
   134 ;;		_SEND_UART
   135 ;; This function is called by:
   136 ;;		Startup code after reset
   137 ;; This function uses a non-reentrant model
   138 ;;
   139                           
   140                           	psect	text0
   141  00BFE0                     __ptext0:
   142                           	opt callstack 0
   143  00BFE0                     _main:
   144                           	opt callstack 30
   145  00BFE0                     
   146                           ;Uart_Uso.c: 17:     SEND_UART(Recibir);
   147  00BFE0  0E60               	movlw	96
   148  00BFE2  6ED3               	movwf	211,c	;volatile
   149  00BFE4                     
   150                           ;Uart_Uso.c: 20: 
   151  00BFE4  68B4               	setf	180,c	;volatile
   152  00BFE6                     
   153                           ;Uart_Uso.c: 21:     }
   154  00BFE6  9EB5               	bcf	181,7,c	;volatile
   155                           
   156                           ;Uart_Uso.c: 22: }
   157  00BFE8  0E0F               	movlw	15
   158  00BFEA  6EC1               	movwf	193,c	;volatile
   159  00BFEC  ECCF  F05F         	call	_INIT_UART	;wreg free
   160  00BFF0  ECE3  F05F         	call	_RECEIVE_UART	;wreg free
   161  00BFF4  6E01               	movwf	_Recibir^0,c
   162  00BFF6  5001               	movf	_Recibir^0,w,c
   163  00BFF8  ECD8  F05F         	call	_SEND_UART
   164  00BFFC  EF00  F000         	goto	start
   165  00C000                     __end_of_main:
   166                           	opt callstack 0
   167                           
   168 ;; *************** function _SEND_UART *****************
   169 ;; Defined at:
   170 ;;		line 16 in file "UART.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;  TX_Data         1    wreg     unsigned char 
   173 ;; Auto vars:     Size  Location     Type
   174 ;;  TX_Data         1    0[COMRAM] unsigned char 
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   188 ;;Total ram usage:        1 bytes
   189 ;; Hardware stack levels used:    1
   190 ;; This function calls:
   191 ;;		Nothing
   192 ;; This function is called by:
   193 ;;		_main
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text1
   198  00BFB0                     __ptext1:
   199                           	opt callstack 0
   200  00BFB0                     _SEND_UART:
   201                           	opt callstack 30
   202                           
   203                           ;incstack = 0
   204                           ;SEND_UART@TX_Data stored from wreg
   205  00BFB0  6E03               	movwf	SEND_UART@TX_Data^0,c
   206  00BFB2                     l24:
   207                           
   208                           ;UART.c: 17:     while (TXSTAbits.TRMT == 0) {
   209  00BFB2  A2AC               	btfss	172,1,c	;volatile
   210  00BFB4  EFDE  F05F         	goto	u11
   211  00BFB8  EFE0  F05F         	goto	u10
   212  00BFBC                     u11:
   213  00BFBC  EFD9  F05F         	goto	l24
   214  00BFC0                     u10:
   215  00BFC0                     
   216                           ;UART.c: 19:     TXREG = TX_Data;
   217  00BFC0  C003  FFAD         	movff	SEND_UART@TX_Data,4013	;volatile
   218  00BFC4  0012               	return		;funcret
   219  00BFC6                     __end_of_SEND_UART:
   220                           	opt callstack 0
   221                           
   222 ;; *************** function _RECEIVE_UART *****************
   223 ;; Defined at:
   224 ;;		line 23 in file "UART.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      unsigned char 
   231 ;; Registers used:
   232 ;;		wreg, status,2
   233 ;; Tracked objects:
   234 ;;		On entry : 0/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   242 ;;Total ram usage:        0 bytes
   243 ;; Hardware stack levels used:    1
   244 ;; This function calls:
   245 ;;		Nothing
   246 ;; This function is called by:
   247 ;;		_main
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	text2
   252  00BFC6                     __ptext2:
   253                           	opt callstack 0
   254  00BFC6                     _RECEIVE_UART:
   255                           	opt callstack 30
   256  00BFC6                     l30:
   257                           
   258                           ;UART.c: 24:     while (PIR1bits.RCIF == 0) {
   259  00BFC6  AA9E               	btfss	158,5,c	;volatile
   260  00BFC8  EFE8  F05F         	goto	u21
   261  00BFCC  EFEA  F05F         	goto	u20
   262  00BFD0                     u21:
   263  00BFD0  EFE3  F05F         	goto	l30
   264  00BFD4                     u20:
   265  00BFD4                     
   266                           ;UART.c: 27:     RX_Data = RCREG;
   267  00BFD4  CFAE F002          	movff	4014,_RX_Data	;volatile
   268  00BFD8                     
   269                           ;UART.c: 28:     RCREG = 0;
   270  00BFD8  0E00               	movlw	0
   271  00BFDA  6EAE               	movwf	174,c	;volatile
   272                           
   273                           ;UART.c: 29:     return RX_Data;
   274  00BFDC  5002               	movf	_RX_Data^0,w,c
   275  00BFDE  0012               	return		;funcret
   276  00BFE0                     __end_of_RECEIVE_UART:
   277                           	opt callstack 0
   278                           
   279 ;; *************** function _INIT_UART *****************
   280 ;; Defined at:
   281 ;;		line 4 in file "UART.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, status,2
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels used:    1
   301 ;; This function calls:
   302 ;;		Nothing
   303 ;; This function is called by:
   304 ;;		_main
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           	psect	text3
   309  00BF9E                     __ptext3:
   310                           	opt callstack 0
   311  00BF9E                     _INIT_UART:
   312                           	opt callstack 30
   313  00BF9E                     
   314                           ;UART.c: 8:     TRISCbits.TRISC7 = 1;
   315  00BF9E  8E94               	bsf	148,7,c	;volatile
   316                           
   317                           ;UART.c: 9:     TRISCbits.TRISC6 = 0;
   318  00BFA0  9C94               	bcf	148,6,c	;volatile
   319  00BFA2                     
   320                           ;UART.c: 10:     TXSTA = 0b00100110;
   321  00BFA2  0E26               	movlw	38
   322  00BFA4  6EAC               	movwf	172,c	;volatile
   323                           
   324                           ;UART.c: 11:     RCSTA = 0b10010000;
   325  00BFA6  0E90               	movlw	144
   326  00BFA8  6EAB               	movwf	171,c	;volatile
   327                           
   328                           ;UART.c: 13:     SPBRG = 25;
   329  00BFAA  0E19               	movlw	25
   330  00BFAC  6EAF               	movwf	175,c	;volatile
   331  00BFAE  0012               	return		;funcret
   332  00BFB0                     __end_of_INIT_UART:
   333                           	opt callstack 0
   334  0000                     
   335                           	psect	rparam
   336  0000                     tosu	equ	0xFFF
   337                           tosh	equ	0xFFE
   338                           tosl	equ	0xFFD
   339                           stkptr	equ	0xFFC
   340                           pclatu	equ	0xFFB
   341                           pclath	equ	0xFFA
   342                           pcl	equ	0xFF9
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           prodh	equ	0xFF4
   348                           prodl	equ	0xFF3
   349                           indf0	equ	0xFEF
   350                           postinc0	equ	0xFEE
   351                           postdec0	equ	0xFED
   352                           preinc0	equ	0xFEC
   353                           plusw0	equ	0xFEB
   354                           fsr0h	equ	0xFEA
   355                           fsr0l	equ	0xFE9
   356                           wreg	equ	0xFE8
   357                           indf1	equ	0xFE7
   358                           postinc1	equ	0xFE6
   359                           postdec1	equ	0xFE5
   360                           preinc1	equ	0xFE4
   361                           plusw1	equ	0xFE3
   362                           fsr1h	equ	0xFE2
   363                           fsr1l	equ	0xFE1
   364                           bsr	equ	0xFE0
   365                           indf2	equ	0xFDF
   366                           postinc2	equ	0xFDE
   367                           postdec2	equ	0xFDD
   368                           preinc2	equ	0xFDC
   369                           plusw2	equ	0xFDB
   370                           fsr2h	equ	0xFDA
   371                           fsr2l	equ	0xFD9
   372                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SEND_UART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                          _INIT_UART
                       _RECEIVE_UART
                          _SEND_UART
 ---------------------------------------------------------------------------------
 (1) _SEND_UART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RECEIVE_UART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INIT_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_UART
   _RECEIVE_UART
   _SEND_UART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      1       3       1        3.2%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3      20        0.0%
DATA                 0      0       3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 22 22:06:23 2019

                     l21 BFAE                       l30 BFC6                       l32 BFD4  
                     l24 BFB2                       l33 BFDE                       l27 BFC4  
                     l57 BFFC                       u10 BFC0                       u11 BFBC  
                     u20 BFD4                       u21 BFD0                      l741 BFC0  
                    l735 BF9E                      l751 BFE0                      l737 BFA2  
                    l745 BFC6                      l761 BFF6                      l753 BFE4  
                    l747 BFD8                      l739 BFB2                      l755 BFE6  
                    l757 BFEC                      l759 BFF0             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _main BFE0                     start 0000  
     __size_of_INIT_UART 0012            __CFG_MCLRE$ON 000000             ___param_bank 000000  
     __size_of_SEND_UART 0016                    ?_main 0003                    _CMCON 000FB4  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _TXSTA 000FAC            ?_RECEIVE_UART 0003  
        __initialization BF96             __end_of_main C000                   ??_main 0004  
          __activetblptr 000000           ??_RECEIVE_UART 0003        __end_of_INIT_UART BFB0  
                 _ADCON1 000FC1                   _OSCCON 000FD3        __end_of_SEND_UART BFC6  
             __accesstop 0060  __end_of__initialization BF98          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0003               __pnvCOMRAM 0001  
   __end_of_RECEIVE_UART BFE0                  _RX_Data 0002                  _Recibir 0001  
                __Hparam 0000                  __Lparam 0000         SEND_UART@TX_Data 0003  
                __pcinit BF96                  __ramtop 0D00                  __ptext0 BFE0  
                __ptext1 BFB0                  __ptext2 BFC6                  __ptext3 BF9E  
   end_of_initialization BF98                _INIT_UART BF9E                _SEND_UART BFB0  
              _TRISCbits 000F94               ?_INIT_UART 0003    __size_of_RECEIVE_UART 001A  
              _TXSTAbits 000FAC               ?_SEND_UART 0003      start_initialization BF96  
           _RECEIVE_UART BFC6         __CFG_OSC$IRCIO67 000000              __pbssCOMRAM 0002  
            ??_INIT_UART 0003              ??_SEND_UART 0003                 _PIR1bits 000F9E  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0020  
             _CVRCONbits 000FB5  
