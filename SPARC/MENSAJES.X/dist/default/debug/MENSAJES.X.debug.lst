

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 28 11:15:29 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4585 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _RCREG	set	4014
    52  0000                     _PIR1bits	set	3998
    53  0000                     _TXREG	set	4013
    54  0000                     _TXSTAbits	set	4012
    55  0000                     _SPBRG	set	4015
    56  0000                     _RCSTA	set	4011
    57  0000                     _TXSTA	set	4012
    58  0000                     _TRISCbits	set	3988
    59                           
    60                           	psect	smallconst
    61  000D00                     __psmallconst:
    62                           	opt callstack 0
    63  000D00  00                 	db	0
    64  000D01  63                 	db	99	;'c'
    65  000D02  6F                 	db	111	;'o'
    66  000D03  6F                 	db	111	;'o'
    67  000D04  72                 	db	114	;'r'
    68  000D05  64                 	db	100	;'d'
    69  000D06  65                 	db	101	;'e'
    70  000D07  6E                 	db	110	;'n'
    71  000D08  61                 	db	97	;'a'
    72  000D09  64                 	db	100	;'d'
    73  000D0A  61                 	db	97	;'a'
    74  000D0B  73                 	db	115	;'s'
    75  000D0C  20                 	db	32
    76  000D0D  66                 	db	102	;'f'
    77  000D0E  75                 	db	117	;'u'
    78  000D0F  65                 	db	101	;'e'
    79  000D10  72                 	db	114	;'r'
    80  000D11  61                 	db	97	;'a'
    81  000D12  20                 	db	32
    82  000D13  64                 	db	100	;'d'
    83  000D14  65                 	db	101	;'e'
    84  000D15  6C                 	db	108	;'l'
    85  000D16  20                 	db	32
    86  000D17  6C                 	db	108	;'l'
    87  000D18  69                 	db	105	;'i'
    88  000D19  6D                 	db	109	;'m'
    89  000D1A  69                 	db	105	;'i'
    90  000D1B  74                 	db	116	;'t'
    91  000D1C  65                 	db	101	;'e'
    92  000D1D  00                 	db	0
    93  000D1E                     STR_1:
    94  000D1E  43                 	db	67	;'C'
    95  000D1F  6F                 	db	111	;'o'
    96  000D20  6D                 	db	109	;'m'
    97  000D21  61                 	db	97	;'a'
    98  000D22  6E                 	db	110	;'n'
    99  000D23  64                 	db	100	;'d'
   100  000D24  6F                 	db	111	;'o'
   101  000D25  20                 	db	32
   102  000D26  6E                 	db	110	;'n'
   103  000D27  6F                 	db	111	;'o'
   104  000D28  20                 	db	32
   105  000D29  72                 	db	114	;'r'
   106  000D2A  65                 	db	101	;'e'
   107  000D2B  63                 	db	99	;'c'
   108  000D2C  6F                 	db	111	;'o'
   109  000D2D  6E                 	db	110	;'n'
   110  000D2E  6F                 	db	111	;'o'
   111  000D2F  63                 	db	99	;'c'
   112  000D30  69                 	db	105	;'i'
   113  000D31  64                 	db	100	;'d'
   114  000D32  6F                 	db	111	;'o'
   115  000D33  00                 	db	0
   116  000D34  50                 	db	80	;'P'
   117  000D35  72                 	db	114	;'r'
   118  000D36  6F                 	db	111	;'o'
   119  000D37  63                 	db	99	;'c'
   120  000D38  65                 	db	101	;'e'
   121  000D39  73                 	db	115	;'s'
   122  000D3A  6F                 	db	111	;'o'
   123  000D3B  20                 	db	32
   124  000D3C  63                 	db	99	;'c'
   125  000D3D  6F                 	db	111	;'o'
   126  000D3E  6D                 	db	109	;'m'
   127  000D3F  70                 	db	112	;'p'
   128  000D40  6C                 	db	108	;'l'
   129  000D41  65                 	db	101	;'e'
   130  000D42  74                 	db	116	;'t'
   131  000D43  61                 	db	97	;'a'
   132  000D44  64                 	db	100	;'d'
   133  000D45  6F                 	db	111	;'o'
   134  000D46  00                 	db	0
   135  000D47  45                 	db	69	;'E'
   136  000D48  6E                 	db	110	;'n'
   137  000D49  20                 	db	32
   138  000D4A  70                 	db	112	;'p'
   139  000D4B  72                 	db	114	;'r'
   140  000D4C  6F                 	db	111	;'o'
   141  000D4D  63                 	db	99	;'c'
   142  000D4E  65                 	db	101	;'e'
   143  000D4F  73                 	db	115	;'s'
   144  000D50  6F                 	db	111	;'o'
   145  000D51  00                 	db	0
   146                           
   147                           ; #config settings
   148  000D52  00                 	db	0	; dummy byte at the end
   149  0000                     
   150                           	psect	cinit
   151  000E40                     __pcinit:
   152                           	opt callstack 0
   153  000E40                     start_initialization:
   154                           	opt callstack 0
   155  000E40                     __initialization:
   156                           	opt callstack 0
   157                           
   158                           ; Clear objects allocated to COMRAM (1 bytes)
   159  000E40  6A09               	clrf	__pbssCOMRAM& (0+255),c
   160  000E42                     end_of_initialization:
   161                           	opt callstack 0
   162  000E42                     __end_of__initialization:
   163                           	opt callstack 0
   164  000E42  0E00               	movlw	low (__Lsmallconst shr (0+16))
   165  000E44  6EF8               	movwf	tblptru,c
   166  000E46  0E0D               	movlw	high __Lsmallconst
   167  000E48  6EF7               	movwf	tblptrh,c
   168  000E4A  0100               	movlb	0
   169  000E4C  EFEC  F006         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	bssCOMRAM
   172  000009                     __pbssCOMRAM:
   173                           	opt callstack 0
   174  000009                     _RX_Data:
   175                           	opt callstack 0
   176  000009                     	ds	1
   177                           
   178                           	psect	cstackCOMRAM
   179  000001                     __pcstackCOMRAM:
   180                           	opt callstack 0
   181  000001                     SEND_UART@TX_Data:
   182                           	opt callstack 0
   183                           
   184                           ; 1 bytes @ 0x0
   185  000001                     	ds	1
   186  000002                     SEND_STRING@PointString:
   187                           	opt callstack 0
   188                           
   189                           ; 2 bytes @ 0x1
   190  000002                     	ds	2
   191  000004                     ??_SEND_STRING:
   192                           
   193                           ; 1 bytes @ 0x3
   194  000004                     	ds	2
   195  000006                     SEND_STRING@i:
   196                           	opt callstack 0
   197                           
   198                           ; 1 bytes @ 0x5
   199  000006                     	ds	1
   200  000007                     ??_main:
   201                           
   202                           ; 1 bytes @ 0x6
   203  000007                     	ds	2
   204                           
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 17 in file "Mensajes_Uso.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   228 ;;Total ram usage:        2 bytes
   229 ;; Hardware stack levels required when called:    3
   230 ;; This function calls:
   231 ;;		_ERROR_NO_COMANDO
   232 ;;		_INIT_UART
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text0
   239  000DD8                     __ptext0:
   240                           	opt callstack 0
   241  000DD8                     _main:
   242                           	opt callstack 28
   243  000DD8  EC17  F007         	call	_INIT_UART	;wreg free
   244  000DDC                     l875:
   245  000DDC  ECFF  F006         	call	_ERROR_NO_COMANDO	;wreg free
   246  000DE0  0E06               	movlw	6
   247  000DE2  6E08               	movwf	(??_main+1)^0,c
   248  000DE4  0E13               	movlw	19
   249  000DE6  6E07               	movwf	??_main^0,c
   250  000DE8  0EAE               	movlw	174
   251  000DEA                     u107:
   252  000DEA  2EE8               	decfsz	wreg,f,c
   253  000DEC  D7FE               	bra	u107
   254  000DEE  2E07               	decfsz	??_main^0,f,c
   255  000DF0  D7FC               	bra	u107
   256  000DF2  2E08               	decfsz	(??_main+1)^0,f,c
   257  000DF4  D7FA               	bra	u107
   258  000DF6  EFEE  F006         	goto	l875
   259  000DFA  EF00  F000         	goto	start
   260  000DFE                     __end_of_main:
   261                           	opt callstack 0
   262                           
   263 ;; *************** function _INIT_UART *****************
   264 ;; Defined at:
   265 ;;		line 4 in file "UART.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, status,2
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   283 ;;Total ram usage:        0 bytes
   284 ;; Hardware stack levels used:    1
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		_main
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text1
   293  000E2E                     __ptext1:
   294                           	opt callstack 0
   295  000E2E                     _INIT_UART:
   296                           	opt callstack 30
   297  000E2E                     
   298                           ;UART.c: 8:     TRISCbits.TRISC7 = 1;
   299  000E2E  8E94               	bsf	148,7,c	;volatile
   300                           
   301                           ;UART.c: 9:     TRISCbits.TRISC6 = 0;
   302  000E30  9C94               	bcf	148,6,c	;volatile
   303  000E32                     
   304                           ;UART.c: 10:     TXSTA = 0b00100110;
   305  000E32  0E26               	movlw	38
   306  000E34  6EAC               	movwf	172,c	;volatile
   307                           
   308                           ;UART.c: 11:     RCSTA = 0b10010000;
   309  000E36  0E90               	movlw	144
   310  000E38  6EAB               	movwf	171,c	;volatile
   311                           
   312                           ;UART.c: 13:     SPBRG = 25;
   313  000E3A  0E19               	movlw	25
   314  000E3C  6EAF               	movwf	175,c	;volatile
   315  000E3E  0012               	return		;funcret
   316  000E40                     __end_of_INIT_UART:
   317                           	opt callstack 0
   318                           
   319 ;; *************** function _ERROR_NO_COMANDO *****************
   320 ;; Defined at:
   321 ;;		line 6 in file "MENSAJES.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   339 ;;Total ram usage:        0 bytes
   340 ;; Hardware stack levels used:    1
   341 ;; Hardware stack levels required when called:    2
   342 ;; This function calls:
   343 ;;		_SEND_STRING
   344 ;;		_SEND_UART
   345 ;; This function is called by:
   346 ;;		_main
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text2
   351  000DFE                     __ptext2:
   352                           	opt callstack 0
   353  000DFE                     _ERROR_NO_COMANDO:
   354                           	opt callstack 28
   355  000DFE                     
   356                           ;MENSAJES.c: 7:     SEND_UART(10);
   357  000DFE  0E0A               	movlw	10
   358  000E00  EC0C  F007         	call	_SEND_UART
   359  000E04                     
   360                           ;MENSAJES.c: 8:     SEND_STRING("Comando no reconocido");
   361  000E04  0E1E               	movlw	low STR_1
   362  000E06  6E02               	movwf	SEND_STRING@PointString^0,c
   363  000E08  0E0D               	movlw	high STR_1
   364  000E0A  6E03               	movwf	(SEND_STRING@PointString+1)^0,c
   365  000E0C  ECAA  F006         	call	_SEND_STRING	;wreg free
   366  000E10                     
   367                           ;MENSAJES.c: 9:     SEND_UART(10);
   368  000E10  0E0A               	movlw	10
   369  000E12  EC0C  F007         	call	_SEND_UART
   370  000E16  0012               	return		;funcret
   371  000E18                     __end_of_ERROR_NO_COMANDO:
   372                           	opt callstack 0
   373                           
   374 ;; *************** function _SEND_STRING *****************
   375 ;; Defined at:
   376 ;;		line 5 in file "SERIAL.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;  PointString     2    1[COMRAM] PTR unsigned char 
   379 ;;		 -> STR_4(11), STR_3(19), STR_2(29), STR_1(22), 
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  i               1    5[COMRAM] unsigned char 
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   394 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   395 ;;Total ram usage:        5 bytes
   396 ;; Hardware stack levels used:    1
   397 ;; Hardware stack levels required when called:    1
   398 ;; This function calls:
   399 ;;		_SEND_UART
   400 ;; This function is called by:
   401 ;;		_ERROR_NO_COMANDO
   402 ;;		_ERROR_FUERA_LIMITE
   403 ;;		_TERMINADO
   404 ;;		_PROCESO
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text3
   409  000D54                     __ptext3:
   410                           	opt callstack 0
   411  000D54                     _SEND_STRING:
   412                           	opt callstack 28
   413  000D54                     
   414                           ;SERIAL.c: 6:     for (unsigned char i = 0; i < 255; i++) {
   415  000D54  0E00               	movlw	0
   416  000D56  6E06               	movwf	SEND_STRING@i^0,c
   417  000D58                     l839:
   418                           
   419                           ;SERIAL.c: 7:         if (PointString[i] < 32 || PointString[i] > 122 ) {
   420  000D58  5006               	movf	SEND_STRING@i^0,w,c
   421  000D5A  2402               	addwf	SEND_STRING@PointString^0,w,c
   422  000D5C  6E04               	movwf	??_SEND_STRING^0,c
   423  000D5E  0E00               	movlw	0
   424  000D60  2003               	addwfc	(SEND_STRING@PointString+1)^0,w,c
   425  000D62  6E05               	movwf	(??_SEND_STRING+1)^0,c
   426  000D64  C004  FFF6         	movff	??_SEND_STRING,tblptrl
   427  000D68  C005  FFF7         	movff	??_SEND_STRING+1,tblptrh
   428  000D6C                     	if	0	;tblptru may be non-zero
   429  000D6C                     	endif
   430  000D6C                     	if	0	;tblptru may be non-zero
   431  000D6C                     	endif
   432  000D6C  0E1F               	movlw	31
   433  000D6E  0008               	tblrd		*
   434  000D70  64F5               	cpfsgt	tablat,c
   435  000D72  EFBD  F006         	goto	u71
   436  000D76  EFBF  F006         	goto	u70
   437  000D7A                     u71:
   438  000D7A  EFEB  F006         	goto	l65
   439  000D7E                     u70:
   440  000D7E  5006               	movf	SEND_STRING@i^0,w,c
   441  000D80  2402               	addwf	SEND_STRING@PointString^0,w,c
   442  000D82  6E04               	movwf	??_SEND_STRING^0,c
   443  000D84  0E00               	movlw	0
   444  000D86  2003               	addwfc	(SEND_STRING@PointString+1)^0,w,c
   445  000D88  6E05               	movwf	(??_SEND_STRING+1)^0,c
   446  000D8A  C004  FFF6         	movff	??_SEND_STRING,tblptrl
   447  000D8E  C005  FFF7         	movff	??_SEND_STRING+1,tblptrh
   448  000D92                     	if	0	;tblptru may be non-zero
   449  000D92                     	endif
   450  000D92                     	if	0	;tblptru may be non-zero
   451  000D92                     	endif
   452  000D92  0E7A               	movlw	122
   453  000D94  0008               	tblrd		*
   454  000D96  64F5               	cpfsgt	tablat,c
   455  000D98  EFD0  F006         	goto	u81
   456  000D9C  EFD2  F006         	goto	u80
   457  000DA0                     u81:
   458  000DA0  EFD4  F006         	goto	l843
   459  000DA4                     u80:
   460  000DA4  EFEB  F006         	goto	l65
   461  000DA8                     l843:
   462                           
   463                           ;SERIAL.c: 10:         SEND_UART(PointString[i]);
   464  000DA8  5006               	movf	SEND_STRING@i^0,w,c
   465  000DAA  2402               	addwf	SEND_STRING@PointString^0,w,c
   466  000DAC  6E04               	movwf	??_SEND_STRING^0,c
   467  000DAE  0E00               	movlw	0
   468  000DB0  2003               	addwfc	(SEND_STRING@PointString+1)^0,w,c
   469  000DB2  6E05               	movwf	(??_SEND_STRING+1)^0,c
   470  000DB4  C004  FFF6         	movff	??_SEND_STRING,tblptrl
   471  000DB8  C005  FFF7         	movff	??_SEND_STRING+1,tblptrh
   472  000DBC                     	if	0	;tblptru may be non-zero
   473  000DBC                     	endif
   474  000DBC                     	if	0	;tblptru may be non-zero
   475  000DBC                     	endif
   476  000DBC  0008               	tblrd		*
   477  000DBE  50F5               	movf	tablat,w,c
   478  000DC0  EC0C  F007         	call	_SEND_UART
   479  000DC4                     
   480                           ;SERIAL.c: 12:     }
   481  000DC4  2A06               	incf	SEND_STRING@i^0,f,c
   482  000DC6  2806               	incf	SEND_STRING@i^0,w,c
   483  000DC8  A4D8               	btfss	status,2,c
   484  000DCA  EFE9  F006         	goto	u91
   485  000DCE  EFEB  F006         	goto	u90
   486  000DD2                     u91:
   487  000DD2  EFAC  F006         	goto	l839
   488  000DD6                     u90:
   489  000DD6                     l65:
   490  000DD6  0012               	return		;funcret
   491  000DD8                     __end_of_SEND_STRING:
   492                           	opt callstack 0
   493                           
   494 ;; *************** function _SEND_UART *****************
   495 ;; Defined at:
   496 ;;		line 16 in file "UART.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  TX_Data         1    wreg     unsigned char 
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  TX_Data         1    0[COMRAM] unsigned char 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   514 ;;Total ram usage:        1 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_ERROR_NO_COMANDO
   520 ;;		_SEND_STRING
   521 ;;		_ERROR_FUERA_LIMITE
   522 ;;		_TERMINADO
   523 ;;		_PROCESO
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text4
   528  000E18                     __ptext4:
   529                           	opt callstack 0
   530  000E18                     _SEND_UART:
   531                           	opt callstack 29
   532                           
   533                           ;incstack = 0
   534                           ;SEND_UART@TX_Data stored from wreg
   535  000E18  6E01               	movwf	SEND_UART@TX_Data^0,c
   536  000E1A                     l42:
   537                           
   538                           ;UART.c: 17:     while (TXSTAbits.TRMT == 0) {
   539  000E1A  A2AC               	btfss	172,1,c	;volatile
   540  000E1C  EF12  F007         	goto	u11
   541  000E20  EF14  F007         	goto	u10
   542  000E24                     u11:
   543  000E24  EF0D  F007         	goto	l42
   544  000E28                     u10:
   545  000E28                     
   546                           ;UART.c: 19:     TXREG = TX_Data;
   547  000E28  C001  FFAD         	movff	SEND_UART@TX_Data,4013	;volatile
   548  000E2C  0012               	return		;funcret
   549  000E2E                     __end_of_SEND_UART:
   550                           	opt callstack 0
   551                           
   552                           	psect	rparam
   553  0000                     tosu	equ	0xFFF
   554                           tosh	equ	0xFFE
   555                           tosl	equ	0xFFD
   556                           stkptr	equ	0xFFC
   557                           pclatu	equ	0xFFB
   558                           pclath	equ	0xFFA
   559                           pcl	equ	0xFF9
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           prodh	equ	0xFF4
   565                           prodl	equ	0xFF3
   566                           indf0	equ	0xFEF
   567                           postinc0	equ	0xFEE
   568                           postdec0	equ	0xFED
   569                           preinc0	equ	0xFEC
   570                           plusw0	equ	0xFEB
   571                           fsr0h	equ	0xFEA
   572                           fsr0l	equ	0xFE9
   573                           wreg	equ	0xFE8
   574                           indf1	equ	0xFE7
   575                           postinc1	equ	0xFE6
   576                           postdec1	equ	0xFE5
   577                           preinc1	equ	0xFE4
   578                           plusw1	equ	0xFE3
   579                           fsr1h	equ	0xFE2
   580                           fsr1l	equ	0xFE1
   581                           bsr	equ	0xFE0
   582                           indf2	equ	0xFDF
   583                           postinc2	equ	0xFDE
   584                           postdec2	equ	0xFDD
   585                           preinc2	equ	0xFDC
   586                           plusw2	equ	0xFDB
   587                           fsr2h	equ	0xFDA
   588                           fsr2l	equ	0xFD9
   589                           status	equ	0xFD8


Data Sizes:
    Strings     81
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    SEND_STRING@PointString	PTR unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[11]), STR_3(CODE[19]), STR_2(CODE[29]), STR_1(CODE[22]), 


Critical Paths under _main in COMRAM

    _ERROR_NO_COMANDO->_SEND_STRING
    _SEND_STRING->_SEND_UART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     512
                                              6 COMRAM     2     2      0
                   _ERROR_NO_COMANDO
                          _INIT_UART
 ---------------------------------------------------------------------------------
 (1) _INIT_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ERROR_NO_COMANDO                                     0     0      0     512
                        _SEND_STRING
                          _SEND_UART
 ---------------------------------------------------------------------------------
 (2) _SEND_STRING                                          5     3      2     497
                                              1 COMRAM     5     3      2
                          _SEND_UART
 ---------------------------------------------------------------------------------
 (2) _SEND_UART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ERROR_NO_COMANDO
     _SEND_STRING
       _SEND_UART
     _SEND_UART
   _INIT_UART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8       9       1        9.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      20        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 28 11:15:29 2019

                        l9 0E16                         l42 0E1A                         l45 0E2C  
                       l39 0E3E                         l65 0DD6                         u10 0E28  
                       u11 0E24                         u70 0D7E                         u71 0D7A  
                       u80 0DA4                         u81 0DA0                         u90 0DD6  
                       u91 0DD2                        l841 0D7E                        l833 0D54  
                      l763 0E1A                        l843 0DA8                        l851 0E04  
                      l765 0E28                        l845 0DC4                        l853 0E10  
                      l847 0DC6                        l839 0D58                        l791 0E2E  
                      l849 0DFE                        l793 0E32                        l873 0DD8  
                      l875 0DDC                        l877 0DE0                        u107 0DEA  
                      wreg 000FE8               __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000  
                     STR_1 0D1E                       STR_2 0D01                       STR_3 0D34  
                     STR_4 0D47                       _main 0DD8                       start 0000  
       __size_of_INIT_UART 0012              __CFG_MCLRE$ON 000000               ___param_bank 000000  
       __size_of_SEND_UART 0016                      ?_main 0001                      _RCREG 000FAE  
                    _RCSTA 000FAB                      _SPBRG 000FAF                      _TXREG 000FAD  
                    _TXSTA 000FAC                      tablat 000FF5                      status 000FD8  
             ?_SEND_STRING 0002            __initialization 0E40               __end_of_main 0DFE  
                   ??_main 0007              __activetblptr 000001          __end_of_INIT_UART 0E40  
        __end_of_SEND_UART 0E2E          ?_ERROR_NO_COMANDO 0001         ??_ERROR_NO_COMANDO 0007  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0060    __end_of__initialization 0E42  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001             __pcstackCOMRAM 0001  
     __size_of_SEND_STRING 0084                    _RX_Data 0009                    __Hparam 0000  
                  __Lparam 0000           SEND_UART@TX_Data 0001               __psmallconst 0D00  
                  __pcinit 0E40                    __ramtop 0D00                    __ptext0 0DD8  
                  __ptext1 0E2E                    __ptext2 0DFE                    __ptext3 0D54  
                  __ptext4 0E18       end_of_initialization 0E42                  _INIT_UART 0E2E  
                _SEND_UART 0E18  __size_of_ERROR_NO_COMANDO 001A                  _TRISCbits 000F94  
               ?_INIT_UART 0001                  _TXSTAbits 000FAC                 ?_SEND_UART 0001  
      start_initialization 0E40           __CFG_OSC$IRCIO67 000000               SEND_STRING@i 0006  
              __pbssCOMRAM 0009                ??_INIT_UART 0001              ??_SEND_STRING 0004  
              ??_SEND_UART 0001           _ERROR_NO_COMANDO 0DFE                __smallconst 0D00  
                 _PIR1bits 000F9E     SEND_STRING@PointString 0002        __end_of_SEND_STRING 0DD8  
                 __Hrparam 0000                   __Lrparam 0000               __Lsmallconst 0D00  
            __size_of_main 0026                _SEND_STRING 0D54   __end_of_ERROR_NO_COMANDO 0E18  
