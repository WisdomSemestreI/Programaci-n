

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 26 11:41:34 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4585 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _T2CONbits	set	4042
    50  0000                     _TMR2	set	4044
    51  0000                     _CCP1CON	set	4029
    52  0000                     _T2CON	set	4042
    53  0000                     _CCPR1L	set	4030
    54  0000                     _PR2	set	4043
    55  0000                     _RCREG	set	4014
    56  0000                     _PIR1bits	set	3998
    57  0000                     _TXREG	set	4013
    58  0000                     _TXSTAbits	set	4012
    59  0000                     _SPBRG	set	4015
    60  0000                     _RCSTA	set	4011
    61  0000                     _TXSTA	set	4012
    62  0000                     _PORTCbits	set	3970
    63  0000                     _PORTDbits	set	3971
    64  0000                     _TRISDbits	set	3989
    65  0000                     _TRISCbits	set	3988
    66  0000                     _ADCON1	set	4033
    67  0000                     _CVRCONbits	set	4021
    68  0000                     _CMCON	set	4020
    69  0000                     _OSCCON	set	4051
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  00BF1C                     __pcinit:
    75                           	opt callstack 0
    76  00BF1C                     start_initialization:
    77                           	opt callstack 0
    78  00BF1C                     __initialization:
    79                           	opt callstack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (2 bytes)
    82  00BF1C  6A09               	clrf	(__pbssCOMRAM+1)& (0+255),c
    83  00BF1E  6A08               	clrf	__pbssCOMRAM& (0+255),c
    84  00BF20                     end_of_initialization:
    85                           	opt callstack 0
    86  00BF20                     __end_of__initialization:
    87                           	opt callstack 0
    88  00BF20  0100               	movlb	0
    89  00BF22  EFB4  F05F         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	bssCOMRAM
    92  000008                     __pbssCOMRAM:
    93                           	opt callstack 0
    94  000008                     _RX_Data:
    95                           	opt callstack 0
    96  000008                     	ds	1
    97  000009                     _TX_Data:
    98                           	opt callstack 0
    99  000009                     	ds	1
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	opt callstack 0
   104  000001                     SEND_UART@TX_Data:
   105                           	opt callstack 0
   106                           
   107                           ; 1 bytes @ 0x0
   108  000001                     	ds	1
   109  000002                     main@Lectura:
   110                           	opt callstack 0
   111                           
   112                           ; 1 bytes @ 0x1
   113  000002                     	ds	1
   114  000003                     main@posicion:
   115                           	opt callstack 0
   116                           
   117                           ; 2 bytes @ 0x2
   118  000003                     	ds	2
   119  000005                     main@i:
   120                           	opt callstack 0
   121                           
   122                           ; 1 bytes @ 0x4
   123  000005                     	ds	1
   124  000006                     main@coordenada:
   125                           	opt callstack 0
   126                           
   127                           ; 2 bytes @ 0x5
   128  000006                     	ds	2
   129                           
   130 ;;
   131 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   132 ;;
   133 ;; *************** function _main *****************
   134 ;; Defined at:
   135 ;;		line 22 in file "Step_Motor_Uso.c"
   136 ;; Parameters:    Size  Location     Type
   137 ;;		None
   138 ;; Auto vars:     Size  Location     Type
   139 ;;  i               1    4[COMRAM] unsigned char 
   140 ;;  coordenada      2    5[COMRAM] unsigned short 
   141 ;;  posicion        2    2[COMRAM] unsigned short 
   142 ;;  Lectura         1    1[COMRAM] unsigned char 
   143 ;; Return value:  Size  Location     Type
   144 ;;                  1    wreg      void 
   145 ;; Registers used:
   146 ;;		wreg, status,2, status,0, cstack
   147 ;; Tracked objects:
   148 ;;		On entry : 0/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   153 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   155 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   156 ;;Total ram usage:        6 bytes
   157 ;; Hardware stack levels required when called:    1
   158 ;; This function calls:
   159 ;;		_INIT_UART
   160 ;;		_RECEIVE_UART
   161 ;;		_SEND_UART
   162 ;; This function is called by:
   163 ;;		Startup code after reset
   164 ;; This function uses a non-reentrant model
   165 ;;
   166                           
   167                           	psect	text0
   168  00BF68                     __ptext0:
   169                           	opt callstack 0
   170  00BF68                     _main:
   171                           	opt callstack 30
   172  00BF68                     
   173                           ;Step_Motor_Uso.c: 25:         TRISDbits.RD1 = 0;
   174  00BF68  0E60               	movlw	96
   175  00BF6A  6ED3               	movwf	211,c	;volatile
   176  00BF6C                     
   177                           ;Step_Motor_Uso.c: 27:         if (posicion < coordenada) {
   178  00BF6C  68B4               	setf	180,c	;volatile
   179  00BF6E                     
   180                           ;Step_Motor_Uso.c: 28:             PORTDbits.RD1 = 1;
   181  00BF6E  9EB5               	bcf	181,7,c	;volatile
   182                           
   183                           ;Step_Motor_Uso.c: 29:             for (posicion; posicion < coordenada;) {
   184  00BF70  0E0F               	movlw	15
   185  00BF72  6EC1               	movwf	193,c	;volatile
   186  00BF74                     
   187                           ;Step_Motor_Uso.c: 31:                     PORTCbits.RC1 = 1;
   188  00BF74  EC93  F05F         	call	_INIT_UART	;wreg free
   189  00BF78                     l788:
   190                           
   191                           ;Step_Motor_Uso.c: 34:                     _delay((unsigned long)((1.25)*(4000000/4000.0
      +                          )));
   192  00BF78  0E00               	movlw	0
   193  00BF7A  6E04               	movwf	(main@posicion+1)^0,c
   194  00BF7C  0E00               	movlw	0
   195  00BF7E  6E03               	movwf	main@posicion^0,c
   196                           
   197                           ;Step_Motor_Uso.c: 35:                 }
   198  00BF80  ECA7  F05F         	call	_RECEIVE_UART	;wreg free
   199  00BF84  6E02               	movwf	main@Lectura^0,c
   200  00BF86                     
   201                           ;Step_Motor_Uso.c: 36:                 posicion++;
   202  00BF86  0ED0               	movlw	208
   203  00BF88  2402               	addwf	main@Lectura^0,w,c
   204  00BF8A  6E06               	movwf	main@coordenada^0,c
   205  00BF8C  6A07               	clrf	(main@coordenada+1)^0,c
   206  00BF8E  0EFF               	movlw	255
   207  00BF90  2207               	addwfc	(main@coordenada+1)^0,f,c
   208  00BF92                     
   209                           ;Step_Motor_Uso.c: 38:             posicion = coordenada;
   210  00BF92  9294               	bcf	148,1,c	;volatile
   211  00BF94                     
   212                           ;Step_Motor_Uso.c: 39:         }
   213  00BF94  9295               	bcf	149,1,c	;volatile
   214  00BF96                     
   215                           ;Step_Motor_Uso.c: 41:     }
   216  00BF96  5006               	movf	main@coordenada^0,w,c
   217  00BF98  1007               	iorwf	(main@coordenada+1)^0,w,c
   218  00BF9A  B4D8               	btfsc	status,2,c
   219  00BF9C  EFD2  F05F         	goto	u31
   220  00BFA0  EFD4  F05F         	goto	u30
   221  00BFA4                     u31:
   222  00BFA4  EFF9  F05F         	goto	l816
   223  00BFA8                     u30:
   224  00BFA8                     
   225                           ;Step_Motor_Uso.c: 42: 
   226  00BFA8  8283               	bsf	131,1,c	;volatile
   227  00BFAA  EFEE  F05F         	goto	l814
   228  00BFAE                     l800:
   229                           
   230                           ;Step_Motor_Uso.c: 44: }
   231  00BFAE  0E00               	movlw	0
   232  00BFB0  6E05               	movwf	main@i^0,c
   233  00BFB2                     l51:
   234                           
   235                           ;Step_Motor_Uso.c: 45: 
   236  00BFB2  8282               	bsf	130,1,c	;volatile
   237  00BFB4                     
   238                           ;Step_Motor_Uso.c: 46: void INIT_UART() {
   239  00BFB4  0EFA               	movlw	250
   240  00BFB6                     u67:
   241  00BFB6  D000               	nop2	
   242  00BFB8  2EE8               	decfsz	wreg,f,c
   243  00BFBA  D7FD               	bra	u67
   244  00BFBC                     
   245                           ;Step_Motor_Uso.c: 47: 
   246  00BFBC  9282               	bcf	130,1,c	;volatile
   247                           
   248                           ;Step_Motor_Uso.c: 48: 
   249  00BFBE  0EFA               	movlw	250
   250  00BFC0                     u77:
   251  00BFC0  D000               	nop2	
   252  00BFC2  2EE8               	decfsz	wreg,f,c
   253  00BFC4  D7FD               	bra	u77
   254  00BFC6                     
   255                           ;Step_Motor_Uso.c: 49: 
   256  00BFC6  2A05               	incf	main@i^0,f,c
   257  00BFC8  0E04               	movlw	4
   258  00BFCA  6405               	cpfsgt	main@i^0,c
   259  00BFCC  EFEA  F05F         	goto	u41
   260  00BFD0  EFEC  F05F         	goto	u40
   261  00BFD4                     u41:
   262  00BFD4  EFD9  F05F         	goto	l51
   263  00BFD8                     u40:
   264  00BFD8                     
   265                           ;Step_Motor_Uso.c: 50:     TRISCbits.TRISC7 = 1;
   266  00BFD8  4A03               	infsnz	main@posicion^0,f,c
   267  00BFDA  2A04               	incf	(main@posicion+1)^0,f,c
   268  00BFDC                     l814:
   269  00BFDC  5006               	movf	main@coordenada^0,w,c
   270  00BFDE  5C03               	subwf	main@posicion^0,w,c
   271  00BFE0  5007               	movf	(main@coordenada+1)^0,w,c
   272  00BFE2  5804               	subwfb	(main@posicion+1)^0,w,c
   273  00BFE4  A0D8               	btfss	status,0,c
   274  00BFE6  EFF7  F05F         	goto	u51
   275  00BFEA  EFF9  F05F         	goto	u50
   276  00BFEE                     u51:
   277  00BFEE  EFD7  F05F         	goto	l800
   278  00BFF2                     u50:
   279  00BFF2                     l816:
   280                           
   281                           ;Step_Motor_Uso.c: 54: 
   282  00BFF2  0E52               	movlw	82
   283  00BFF4  EC9C  F05F         	call	_SEND_UART
   284  00BFF8  EFBC  F05F         	goto	l788
   285  00BFFC  EF00  F000         	goto	start
   286  00C000                     __end_of_main:
   287                           	opt callstack 0
   288                           
   289 ;; *************** function _SEND_UART *****************
   290 ;; Defined at:
   291 ;;		line 72 in file "Step_Motor_Uso.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;  TX_Data         1    wreg     unsigned char 
   294 ;; Auto vars:     Size  Location     Type
   295 ;;  TX_Data         1    0[COMRAM] unsigned char 
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   309 ;;Total ram usage:        1 bytes
   310 ;; Hardware stack levels used:    1
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text1
   319  00BF38                     __ptext1:
   320                           	opt callstack 0
   321  00BF38                     _SEND_UART:
   322                           	opt callstack 30
   323                           
   324                           ;incstack = 0
   325                           ;SEND_UART@TX_Data stored from wreg
   326  00BF38  6E01               	movwf	SEND_UART@TX_Data^0,c
   327  00BF3A                     l62:
   328  00BF3A  A2AC               	btfss	172,1,c	;volatile
   329  00BF3C  EFA2  F05F         	goto	u21
   330  00BF40  EFA4  F05F         	goto	u20
   331  00BF44                     u21:
   332  00BF44  EF9D  F05F         	goto	l62
   333  00BF48                     u20:
   334  00BF48  C001  FFAD         	movff	SEND_UART@TX_Data,4013	;volatile
   335  00BF4C  0012               	return		;funcret
   336  00BF4E                     __end_of_SEND_UART:
   337                           	opt callstack 0
   338                           
   339 ;; *************** function _RECEIVE_UART *****************
   340 ;; Defined at:
   341 ;;		line 79 in file "Step_Motor_Uso.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      unsigned char 
   348 ;; Registers used:
   349 ;;		wreg, status,2
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   359 ;;Total ram usage:        0 bytes
   360 ;; Hardware stack levels used:    1
   361 ;; This function calls:
   362 ;;		Nothing
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text2
   369  00BF4E                     __ptext2:
   370                           	opt callstack 0
   371  00BF4E                     _RECEIVE_UART:
   372                           	opt callstack 30
   373  00BF4E                     l68:
   374  00BF4E  AA9E               	btfss	158,5,c	;volatile
   375  00BF50  EFAC  F05F         	goto	u11
   376  00BF54  EFAE  F05F         	goto	u10
   377  00BF58                     u11:
   378  00BF58  EFA7  F05F         	goto	l68
   379  00BF5C                     u10:
   380  00BF5C  CFAE F008          	movff	4014,_RX_Data	;volatile
   381  00BF60  0E00               	movlw	0
   382  00BF62  6EAE               	movwf	174,c	;volatile
   383  00BF64  5008               	movf	_RX_Data^0,w,c
   384  00BF66  0012               	return		;funcret
   385  00BF68                     __end_of_RECEIVE_UART:
   386                           	opt callstack 0
   387                           
   388 ;; *************** function _INIT_UART *****************
   389 ;; Defined at:
   390 ;;		line 60 in file "Step_Motor_Uso.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text3
   418  00BF26                     __ptext3:
   419                           	opt callstack 0
   420  00BF26                     _INIT_UART:
   421                           	opt callstack 30
   422  00BF26                     
   423                           ;Step_Motor_Uso.c: 64: 
   424  00BF26  8E94               	bsf	148,7,c	;volatile
   425                           
   426                           ;Step_Motor_Uso.c: 65: unsigned char RECEIVE_UART() {
   427  00BF28  9C94               	bcf	148,6,c	;volatile
   428  00BF2A                     
   429                           ;Step_Motor_Uso.c: 66:     while (PIR1bits.RCIF == 0) {
   430  00BF2A  0E26               	movlw	38
   431  00BF2C  6EAC               	movwf	172,c	;volatile
   432                           
   433                           ;Step_Motor_Uso.c: 67:     }
   434  00BF2E  0E90               	movlw	144
   435  00BF30  6EAB               	movwf	171,c	;volatile
   436                           
   437                           ;Step_Motor_Uso.c: 69:     RX_Data = RCREG;
   438  00BF32  0E19               	movlw	25
   439  00BF34  6EAF               	movwf	175,c	;volatile
   440  00BF36  0012               	return		;funcret
   441  00BF38                     __end_of_INIT_UART:
   442                           	opt callstack 0
   443  0000                     
   444                           	psect	rparam
   445  0000                     tosu	equ	0xFFF
   446                           tosh	equ	0xFFE
   447                           tosl	equ	0xFFD
   448                           stkptr	equ	0xFFC
   449                           pclatu	equ	0xFFB
   450                           pclath	equ	0xFFA
   451                           pcl	equ	0xFF9
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           prodh	equ	0xFF4
   457                           prodl	equ	0xFF3
   458                           indf0	equ	0xFEF
   459                           postinc0	equ	0xFEE
   460                           postdec0	equ	0xFED
   461                           preinc0	equ	0xFEC
   462                           plusw0	equ	0xFEB
   463                           fsr0h	equ	0xFEA
   464                           fsr0l	equ	0xFE9
   465                           wreg	equ	0xFE8
   466                           indf1	equ	0xFE7
   467                           postinc1	equ	0xFE6
   468                           postdec1	equ	0xFE5
   469                           preinc1	equ	0xFE4
   470                           plusw1	equ	0xFE3
   471                           fsr1h	equ	0xFE2
   472                           fsr1l	equ	0xFE1
   473                           bsr	equ	0xFE0
   474                           indf2	equ	0xFDF
   475                           postinc2	equ	0xFDE
   476                           postdec2	equ	0xFDD
   477                           preinc2	equ	0xFDC
   478                           plusw2	equ	0xFDB
   479                           fsr2h	equ	0xFDA
   480                           fsr2l	equ	0xFD9
   481                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SEND_UART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     135
                                              1 COMRAM     6     6      0
                          _INIT_UART
                       _RECEIVE_UART
                          _SEND_UART
 ---------------------------------------------------------------------------------
 (1) _SEND_UART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RECEIVE_UART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INIT_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_UART
   _RECEIVE_UART
   _SEND_UART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7       9       1        9.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      20        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 26 11:41:34 2019

                     l51 BFB2                       l53 BFF2                       l70 BF5C  
                     l62 BF3A                       l71 BF66                       l65 BF4C  
                     l59 BF36                       l68 BF4E                       u10 BF5C  
                     u11 BF58                       u20 BF48                       u21 BF44  
                     u30 BFA8                       u31 BFA4                       u40 BFD8  
                     u41 BFD4                       u50 BFF2              main@Lectura 0002  
                     u51 BFEE                       u67 BFB6                       u77 BFC0  
                    l800 BFAE                      l810 BFC6                      l812 BFD8  
                    l806 BFB4                      l814 BFDC                      l808 BFBC  
                    l816 BFF2                      l770 BF60                      l764 BF26  
                    l780 BF68                      l766 BF2A                      l774 BF3A  
                    l790 BF86                      l782 BF6C                      l768 BF4E  
                    l776 BF48                      l792 BF92                      l784 BF6E  
                    l794 BF94                      l786 BF74                      l796 BF96  
                    l788 BF78                      l798 BFA8                      _PR2 000FCB  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _TMR2 000FCC                     _main BF68                     start 0000  
     __size_of_INIT_UART 0012            __CFG_MCLRE$ON 000000             ___param_bank 000000  
     __size_of_SEND_UART 0016                    ?_main 0001                    _CMCON 000FB4  
                  _T2CON 000FCA                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _TXREG 000FAD                    _TXSTA 000FAC  
          ?_RECEIVE_UART 0001                    main@i 0005             main@posicion 0003  
                  status 000FD8          __initialization BF1C             __end_of_main C000  
                 ??_main 0002            __activetblptr 000000           ??_RECEIVE_UART 0001  
      __end_of_INIT_UART BF38                   _ADCON1 000FC1                   _CCPR1L 000FBE  
                 _OSCCON 000FD3        __end_of_SEND_UART BF4E               __accesstop 0060  
__end_of__initialization BF20          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001     __end_of_RECEIVE_UART BF68           main@coordenada 0006  
                _CCP1CON 000FBD                  _RX_Data 0008                  _TX_Data 0009  
                __Hparam 0000                  __Lparam 0000         SEND_UART@TX_Data 0001  
                __pcinit BF1C                  __ramtop 0D00                  __ptext0 BF68  
                __ptext1 BF38                  __ptext2 BF4E                  __ptext3 BF26  
              _T2CONbits 000FCA     end_of_initialization BF20                _INIT_UART BF26  
              _SEND_UART BF38                _PORTCbits 000F82                _PORTDbits 000F83  
              _TRISCbits 000F94                _TRISDbits 000F95               ?_INIT_UART 0001  
  __size_of_RECEIVE_UART 001A                _TXSTAbits 000FAC               ?_SEND_UART 0001  
    start_initialization BF1C             _RECEIVE_UART BF4E         __CFG_OSC$IRCIO67 000000  
            __pbssCOMRAM 0008              ??_INIT_UART 0001              ??_SEND_UART 0001  
               _PIR1bits 000F9E                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0098               _CVRCONbits 000FB5  
